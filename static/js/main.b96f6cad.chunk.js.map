{"version":3,"sources":["themes/scss/_variable.scss","utils/checkStore.js","utils/history.js","containers/App/constants.js","containers/App/reducer.js","reducers.js","utils/reducerInjectors.js","utils/injectReducer.js","utils/constants.js","utils/sagaInjectors.js","utils/injectSaga.js","containers/App/saga.js","containers/App/actions.js","containers/App/screens/TestSeedScreen/index.js","containers/App/screens/TestSeedScreen/Injectable.js","containers/App/screens/MyProfile/index.js","containers/Home/constants.js","containers/Home/reducer.js","containers/Home/saga.js","containers/Home/actions.js","containers/Home/screens/ChartMaker/constants.js","utils/themes.js","containers/Home/components/ChartMaker/Header/index.js","containers/Home/components/ChartMaker/menubarItem/index.js","containers/Home/components/ChartMaker/Menubar/index.js","components/Charts/SplineChart/index.js","containers/Home/components/ChartMaker/LineChart/index.js","components/Charts/DoughnutChart/index.js","containers/Home/components/ChartMaker/DoughnutChart/index.js","containers/Home/components/ChartMaker/Chart/index.js","components/Form/TableInput/index.js","containers/Home/components/ChartMaker/LineChartForm/index.js","containers/Home/components/ChartMaker/DoughnutChartForm/index.js","containers/Home/components/ChartMaker/ChartForm/index.js","containers/Home/screens/ChartMaker/index.js","containers/Home/screens/ChartMaker/Injectable.js","containers/Home/index.js","containers/Home/Injectable.js","containers/App/index.js","containers/App/Injectable.js","configureStore.js","serviceWorker.js","index.js","containers/App/screens/MyProfile/my-pic.jpg"],"names":["module","exports","checkStore","store","shape","dispatch","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","history","createBrowserHistory","basename","process","LOGIN","initState","accessToken","undefined","produce","state","setState","newState","appReducer","action","type","constants","payload","createReducer","procReducer","combineReducers","global","globalReducer","router","connectRouter","injectReducerFactory","isValid","key","reducer","isString","isEmpty","Reflect","has","getInjectors","injectReducer","WrappedComponent","ReducerInjector","props","context","this","React","Component","contextType","ReactReduxContext","displayName","name","hoistNonReactStatics","DAEMON","allowedModes","checkKey","checkDescriptor","descriptor","saga","mode","includes","injectSagaFactory","args","newDescriptor","hasSaga","task","ejectSagaFactory","cancel","injectSaga","ejectSaga","InjectSaga","injectors","onLogin","put","takeLatest","Wrapper","styled","div","Button","button","MyProfileBtn","AccessTokenWrapper","BtnsWrapper","TestSeedScreen","className","onClick","push","withConnect","connect","compose","SCol","Col","SRow","Row","MyProfile","xs","style","display","alignItems","src","myPic","alt","icon","faEnvelope","faPhone","faUsers","faGraduationCap","faUniversalAccess","faChartLine","SAVE_CHART","chartData","data","isLoading","HomeReducer","console","log","onSaveChart","DEFINE_NAV_ITEMS","DEFINE_NAV_CHART_TYPE","DOUGHNUT_CHART","ENUM","FaChartPie","SPLINE_CHART","FaChartLine","theme","require","HeaderTitle","nnqduyGreenElegant","NavWrapper","Header","handleNavSample","currentNavItem","Nav","NavItem","active","NavLink","href","IconWrapper","MenuItemText","MenuBarItem","itemDefine","currentChart","changeGraphType","nnqduyDarkSoul","menuOnHover","ArrowExpandButton","memo","chartsMapper","_","map","chartItem","GraphTitle","labels","datasets","label","lineTension","backgroundColor","borderColor","fill","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","legend","LineChart","test","dataSets","optionConfigs","title","form","preData","value","SplineChart","hoverBackgroundColor","DoughnutChart","Doughnut","Chart","TableInput","myProps","restProps","Input","BtnWrapper","NewRow","itemData","setField","deleteRow","idx","scope","onChange","event","procValue","target","placeholder","values","isNaN","Number","setValues","procData","ind","procLabels","filter","item","index","procValues","Table","addRow","ChartForm","Rowx","Colx","HeaderWrapper","MainWrapper","MenuBarWrapper","ChartWrapper","FormWrapper","ChartMaker","path","copyForm","newValues","newNavItem","navItem","handleHoverMenuBar","status","graphType","onMouseEnter","onMouseLeave","PureComponent","Home","exact","component","to","withReducer","withSaga","App","initialState","enhancedCompose","reduxSagaMonitorOptions","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","routerMiddleware","run","configureStore","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b96f6cad.chunk.js","sourcesContent":["module.exports = {\"nnqduyPrimary\":\"rgb(217, 39, 39)\",\"nnqduySecondary\":\"rgb(106, 208, 231)\",\"nnqduyDark\":\"rgb(54, 61, 70)\",\"nnqduyDarkSoul\":\"rgb(2, 35, 48)\",\"nnqduyLight\":\"rgb(246, 246, 246)\",\"nnqduyCloud\":\"rgb(236, 240, 241)\",\"nnqduyGreenLotus\":\"rgb(46, 204, 113)\",\"nnqduyGreenGiantBean\":\"rgb(39, 174, 96)\",\"nnqduyGreenElegant\":\"rgb(74, 187, 148)\",\"nnqduyGreenFather\":\"rgb(13, 170, 136)\",\"nnqduyBluePeter\":\"rgb(10, 189, 227)\",\"nnqduyBlueOcean\":\"rgb(52, 152, 219)\",\"nnqduyBlueHole\":\"rgb(41, 128, 185)\",\"nnqduyBlackLetter\":\"rgb(109, 114, 117)\",\"nnqduyPinkGlamour\":\"rgb(255, 118, 117)\",\"nnqduyPinkSexy\":\"rgb(255, 219, 203)\",\"nnqduyMelonSexy\":\"rgb(248, 194, 145)\",\"nnqduyChildhoodPastelRed\":\"rgb(225, 95, 65)\",\"nnqduyTowelOrange\":\"rgb(255, 192, 72)\",\"nnqduyChickenFeather\":\"rgb(255, 218, 121)\",\"nnqduyInputBorder\":\"rgb(206, 212, 218)\",\"nnqduySoftRock\":\"rgb(178, 190, 195)\",\"nnqduyNcovid19\":\"rgb(223, 228, 234)\",\"nnqduySmoothGray\":\"rgb(178, 190, 195)\",\"nnqduyGrayHolder\":\"rgb(162, 162, 162)\"};","import { conformsTo, isFunction, isObject } from \"lodash\";\nimport invariant from \"invariant\";\n\n/**\n * Validate the shape of redux store\n */\nexport default function checkStore(store) {\n  const shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    injectedReducers: isObject,\n    injectedSagas: isObject,\n  };\n  invariant(\n    conformsTo(store, shape),\n    \"(app/utils...) injectors: Expected a valid redux store\"\n  );\n}\n","import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\nexport default history;\n\n// const enhanceHistory = {\n//   push: (path) => {\n//     history.push(`${process.env.PUBLIC_URL}${path}`);\n//   },\n// };\n\n// export { enhanceHistory };\n","export const LOGIN = \"hs/App/LOGIN\";\nexport const LOGIN_SUCCESS = \"hs/App/LOGIN_SUCCESS\";\nexport const LOGIN_FAILED = \"hs/App/LONGIN_FAILED\";\n","// reducers\nimport * as constants from \"./constants\";\n\nconst initState = {\n  accessToken: undefined,\n};\n\n//! notice that reducer is only a function that return new state object\nconst appReducer = (state = initState, action) => {\n  return produce(state, (newState) => {\n    switch (action.type) {\n      case constants.LOGIN:\n        break;\n      case constants.LOGIN_SUCCESS:\n        newState.accessToken = action.payload;\n        break;\n      default:\n        break;\n    }\n  });\n};\n\nconst produce = (state, setState) => {\n  const newState = { ...state };\n  setState(newState);\n  return {\n    ...state,\n    ...newState,\n  };\n};\n\nexport default appReducer;\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport history from \"utils/history.js\";\nimport globalReducer from \"containers/App/reducer\";\n\nfunction createReducer(injectedReducers = {}) {\n  const procReducer = combineReducers({\n    // * add global reducer here\n    global: globalReducer,\n    router: connectRouter(history),\n    ...injectedReducers, // * this is the reducer injected later\n  });\n  return procReducer;\n}\n\nexport default createReducer;\n","import invariant from \"invariant\";\nimport { isEmpty, isFunction, isString } from \"lodash\";\n\nimport checkStore from \"./checkStore\";\nimport createReducer from \"../reducers\";\n\nexport function injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      isString(key) && !isEmpty(key) && isFunction(reducer),\n      \"(app/utils...) injectReducer: Expected `reducer` to be a reducer function\"\n    );\n\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n    if (\n      Reflect.has(store.injectedReducers, key) &&\n      store.injectedReducers[key] === reducer\n    )\n      return;\n\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n    store.replaceReducer(createReducer(store.injectedReducers));\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectReducer: injectReducerFactory(store, true),\n  };\n}\n","import React from \"react\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport { ReactReduxContext } from \"react-redux\";\n\nimport getInjectors from \"./reducerInjectors\";\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\nexport default ({ key, reducer }) => (WrappedComponent) => {\n  class ReducerInjector extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextType = ReactReduxContext;\n\n    static displayName = `withReducer(${\n      WrappedComponent.displayName || WrappedComponent.name || \"Component\"\n    })`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      getInjectors(context.store).injectReducer(key, reducer);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\n};\n\nconst useInjectReducer = ({ key, reducer }) => {\n  const context = React.useContext(ReactReduxContext);\n  React.useEffect(() => {\n    getInjectors(context.store).injectReducer(key, reducer);\n  }, []);\n};\n\nexport { useInjectReducer };\n","export const RESTART_ON_REMOUNT = \"@@saga-injector/restart-on-remount\";\nexport const DAEMON = \"@@saga-injector/daemon\";\nexport const ONCE_TILL_UNMOUNT = \"@@saga-injector/once-till-unmount\";\n","import invariant from \"invariant\";\nimport { isEmpty, isFunction, isString, conformsTo } from \"lodash\";\n\nimport checkStore from \"./checkStore\";\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from \"./constants\";\n\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\nconst checkKey = (key) =>\n  invariant(\n    isString(key) && !isEmpty(key),\n    \"(app/utils...) injectSaga: Expected `key` to be a non empty string\"\n  );\n\nconst checkDescriptor = (descriptor) => {\n  const shape = {\n    saga: isFunction,\n    mode: (mode) => isString(mode) && allowedModes.includes(mode),\n  };\n  invariant(\n    conformsTo(descriptor, shape),\n    \"(app/utils...) injectSaga: Expected a valid saga descriptor\"\n  );\n};\n\nexport function injectSagaFactory(store, isValid) {\n  return function injectSaga(key, descriptor = {}, args) {\n    if (!isValid) checkStore(store);\n\n    const newDescriptor = {\n      ...descriptor,\n      mode: descriptor.mode || DAEMON,\n    };\n    const { saga, mode } = newDescriptor;\n\n    checkKey(key);\n    checkDescriptor(newDescriptor);\n\n    let hasSaga = Reflect.has(store.injectedSagas, key);\n\n    if (process.env.NODE_ENV !== \"production\") {\n      const oldDescriptor = store.injectedSagas[key];\n      // enable hot reloading of daemon and once-till-unmount sagas\n      if (hasSaga && oldDescriptor.saga !== saga) {\n        oldDescriptor.task.cancel();\n        hasSaga = false;\n      }\n    }\n\n    if (\n      !hasSaga ||\n      (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)\n    ) {\n      /* eslint-disable no-param-reassign */\n      store.injectedSagas[key] = {\n        ...newDescriptor,\n        task: store.runSaga(saga, args),\n      };\n      /* eslint-enable no-param-reassign */\n    }\n  };\n}\n\nexport function ejectSagaFactory(store, isValid) {\n  return function ejectSaga(key) {\n    if (!isValid) checkStore(store);\n\n    checkKey(key);\n\n    if (Reflect.has(store.injectedSagas, key)) {\n      const descriptor = store.injectedSagas[key];\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\n        descriptor.task.cancel();\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\n        if (process.env.NODE_ENV === \"production\") {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          store.injectedSagas[key] = \"done\"; // eslint-disable-line no-param-reassign\n        }\n      }\n    }\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectSaga: injectSagaFactory(store, true),\n    ejectSaga: ejectSagaFactory(store, true),\n  };\n}\n","import React from \"react\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport { ReactReduxContext } from \"react-redux\";\n\nimport getInjectors from \"./sagaInjectors\";\n\n/**\n * Dynamically injects a saga, passes component's props as saga arguments\n *\n * @param {string} key A key of the saga\n * @param {function} saga A root saga that will be injected\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\n * on component mount and never canceled or started again. Another two options:\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\n *   cancelled with `task.cancel()` on component unmount for improved performance,\n *   - constants.ONCE_TILL_UNMOUNT — behaves like 'RESTART_ON_REMOUNT' but never runs it again.\n *\n */\nexport default ({ key, saga, mode }) => (WrappedComponent) => {\n  class InjectSaga extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextType = ReactReduxContext;\n\n    static displayName = `withSaga(${\n      WrappedComponent.displayName || WrappedComponent.name || \"Component\"\n    })`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      this.injectors = getInjectors(context.store);\n\n      this.injectors.injectSaga(key, { saga, mode }, this.props);\n    }\n\n    componentWillUnmount() {\n      this.injectors.ejectSaga(key);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(InjectSaga, WrappedComponent);\n};\n\nconst useInjectSaga = ({ key, saga, mode }) => {\n  const context = React.useContext(ReactReduxContext);\n  React.useEffect(() => {\n    const injectors = getInjectors(context.store);\n    injectors.injectSaga(key, { saga, mode });\n\n    return () => {\n      injectors.ejectSaga(key);\n    };\n  }, []);\n};\n\nexport { useInjectSaga };\n","import { takeLatest, put } from \"redux-saga/effects\";\nimport * as constants from \"./constants\";\nimport * as actions from \"./actions\";\n\n// sagas\nfunction* onLogin(action) {\n  try {\n    const accessToken = \"abcdef123456\";\n    yield put(actions.loginSuccess(accessToken));\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport default function* saga() {\n  yield takeLatest(constants.LOGIN, onLogin);\n}\n","import * as constants from \"./constants\";\n\nexport function login(requestData) {\n  return {\n    type: constants.LOGIN,\n    requestData,\n  };\n}\n\nexport function loginSuccess(payload) {\n  return {\n    type: constants.LOGIN_SUCCESS,\n    payload,\n  };\n}\n\nexport function loginFailed() {\n  return {\n    type: constants.LOGIN_FAILED,\n  };\n}\n","import React from \"react\";\n// import * as actions from \"containers/App/actions\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport history from \"utils/history\";\n\nconst Wrapper = styled.div`\n  border-radius: 5px;\n  border: solid 2px;\n  min-width: 500px;\n  width: 30%;\n  margin: 30vh auto 0 auto;\n  padding: 20px;\n  text-align: center;\n`;\n\nconst Button = styled.button`\n  border-radius: 3px;\n  padding: 6px 12px;\n  background: red;\n  color: white;\n  font-size: 20px;\n  font-weight: 600;\n  cursor: pointer;\n`;\n\nconst MyProfileBtn = styled.button`\n  border-radius: 3px;\n  padding: 6px 12px;\n  background: green;\n  color: white;\n  font-size: 20px;\n  font-weight: 600;\n  cursor: pointer;\n`;\n\nconst AccessTokenWrapper = styled.div`\n  padding: 20px 0;\n`;\n\nconst BtnsWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nfunction TestSeedScreen(props) {\n  const { accessToken } = props;\n\n  // console.log(\"checkStore\", React.useContext(ReactReduxContext).store);\n  return (\n    <Wrapper className=\"hs-test-screen--wrapper\">\n      <BtnsWrapper>\n        <Button onClick={() => history.push(\"/home/chartMaker\")}>\n          Go to Application\n        </Button>\n        <MyProfileBtn onClick={() => history.push(\"/author/profile\")}>\n          Go to My profile\n        </MyProfileBtn>\n      </BtnsWrapper>\n      <AccessTokenWrapper>{`Token: ${accessToken}`}</AccessTokenWrapper>\n    </Wrapper>\n  );\n}\n\nTestSeedScreen.propTypes = {\n  accessToken: PropTypes.string,\n};\n\nexport default TestSeedScreen;\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nimport TestSeedScreen from \".\";\n\nconst mapStateToProps = (state) => {\n  const { global: globalDomain } = state;\n  return {\n    accessToken: globalDomain.accessToken,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatch,\n  };\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(\n  withConnect\n  // ...\n)(TestSeedScreen);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./styles.scss\";\nimport myPic from \"./my-pic.jpg\";\nimport { Row, Col } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEnvelope,\n  faPhone,\n  faUsers,\n  faGraduationCap,\n  faUniversalAccess,\n  faChartLine,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FaSkype } from \"react-icons/fa\";\n\nconst SCol = styled(Col)`\n  padding: 0;\n`;\nconst SRow = styled(Row)`\n  margin: 0;\n`;\n\nfunction MyProfile() {\n  return (\n    <div className=\"pf-page\">\n      <header>\n        <SRow className=\"pf-page-header\">\n          <SCol xs={2} style={{ display: \"flex\", alignItems: \"center\" }}>\n            <div className=\"pf-page-header--avatar\">\n              <img src={myPic} alt=\"test\" />\n            </div>\n          </SCol>\n          <SCol xs={10}>\n            <div className=\"pf-page-header--content\">\n              <h3>Duy Quoc Ngoc Nguyen</h3>\n              <h4>Electrical and Computer Enginer</h4>\n              <hr className=\"pf-page-header--separator\" />\n              <div>\n                I had chances to get involved in doing some jobs related to\n                electrical and computer field. At the present, web development,\n                my new career passion, is what I am focusing on.\n              </div>\n            </div>\n          </SCol>\n        </SRow>\n      </header>\n      <div className=\"pf-page-content\">\n        <div className=\"pf-page-content--left\">\n          <div className=\"pf-sect\">\n            <h3 className=\"pf-sect--title\">Contact</h3>\n            <hr className=\"pf-sect--hr\" />\n            <div className=\"pf-icon-contact\">\n              <FontAwesomeIcon icon={faEnvelope} />\n            </div>\n\n            <p>nnqduy.spkt@gmail.com</p>\n            <div className=\"pf-icon-contact\">\n              <FontAwesomeIcon icon={faPhone} />\n            </div>\n            <p>0338661531</p>\n            <div className=\"pf-icon\">\n              <FaSkype />\n            </div>\n            <p>live:nnqduy.spkt</p>\n          </div>\n\n          <div className=\"pf-sect\">\n            <h3 className=\"pf-sect--title\">Languages</h3>\n            <hr className=\"pf-sect--hr\" />\n            <p>Vietnamese</p>\n            <p>English</p>\n          </div>\n          <div className=\"pf-sect\">\n            <h3 className=\"pf-sect--title\">\n              Web Programing Languages and Frameworks\n            </h3>\n            <hr className=\"pf-sect--hr\" />\n            <p>Reactjs</p>\n            <p>Html, Css, Scss.</p>\n            <p>Nodejs (Expressjs)</p>\n            <p>Jquery, Bootstrap</p>\n          </div>\n          <div className=\"pf-sect\">\n            <h3 className=\"pf-sect--title\">Skills</h3>\n            <hr className=\"pf-sect--hr\" />\n            <div className=\"pf-icon\">\n              <div className=\"pf-icon\">\n                <FontAwesomeIcon icon={faUsers} />\n              </div>\n            </div>\n            <ul className=\"pf-sect--list\">\n              <li>Connection</li>\n              <li>Transparency</li>\n            </ul>\n            <div className=\"pf-icon\">\n              <FontAwesomeIcon icon={faGraduationCap} />\n            </div>\n            <ul className=\"pf-sect--list\">\n              <li>Research </li>\n              <li>Adapt well to new Techs</li>\n            </ul>\n            <div className=\"pf-icon\">\n              <FontAwesomeIcon icon={faUniversalAccess} />\n            </div>\n            <ul className=\"pf-sect--list\">\n              <li>Public speaking</li>\n              <li>Give presentation</li>\n              <li>Handle job with stress</li>\n            </ul>\n            <div className=\"pf-icon\">\n              <FontAwesomeIcon icon={faChartLine} />\n            </div>\n            <ul className=\"pf-sect--list\">\n              <li>Keep learning, improving</li>\n              <li>Best practice</li>\n            </ul>\n          </div>\n\n          <div className=\"pf-sect\">\n            <h3 className=\"pf-sect--title\">My Personal Characteristics</h3>\n            <hr className=\"pf-sect--hr\" />\n            <p className=\"pf-sect--point-box\">\n              Greatly respect to my colleagues\n            </p>\n            <p className=\"pf-sect--point-box\">\n              Patient, serious, dependable at work\n            </p>\n            <p className=\"pf-sect--point-box\">Excited to learn new things</p>\n            <p className=\"pf-sect--point-box\">Dislike stagnation</p>\n          </div>\n        </div>\n\n        <div className=\"pf-page-content--right\">\n          <div className=\"pf-sect\">\n            <h2 className=\"pf-sect--title\">Recent Projects</h2>\n            <hr className=\"pf-sect--hr\" />\n            <h5 className=\"pf-sect--sub-title\">Career Portal (In Progess)</h5>\n            <ul className=\"pf-sect--dot-list\">\n              <li>\n                Built career portal site on purpose of competing against ItViec,\n                Vietnamworks, and any other similar sites. The target is to\n                build the best It Hiring solution website in Viet nam.\n              </li>\n              <li>\n                My Features: Account Management, Resume Builder, Security,\n                Applicants Management, Admin App (Job, User).\n              </li>\n              <li>\n                Technologies:\n                <ul>\n                  <li>\n                    Front-end: Reactjs, redux-saga, styled-components, scss,\n                    html, bootstrap,.. (Structure based on React boilerplate -\n                    Max Stoiber)\n                  </li>\n                </ul>\n                <ul>\n                  <li>Back-end: Nestjs, Nodejs, MySQL.</li>\n                </ul>\n              </li>\n            </ul>\n            <h5 className=\"pf-sect--sub-title\">Engage</h5>\n            <ul className=\"pf-sect--dot-list\">\n              <li>\n                Built a entrepreneur education platform, connects the next\n                generation of investors with other like-minded young investors\n                and entrepreneurs and educates them about the impact investing\n                continuum, provide user neccessary tools to analyze financial\n                products from traning state to financial-first returns ...\n              </li>\n              <li>\n                My Features: Product Page ( Product Detail, Search Product, Add\n                Products, Charts) and fix UI bugs.\n              </li>\n              <li>\n                Technologies:\n                <ul>\n                  <li>\n                    Front-end: Reactjs, redux-saga, styled-components, scss,\n                    html, bootstrap,.. (Structure based on React boilerplate -\n                    Max Stoiber)\n                  </li>\n                </ul>\n                <ul>\n                  <li>Back-end: PHP, Java</li>\n                </ul>\n              </li>\n            </ul>\n            <h5 className=\"pf-sect--sub-title\">Landers</h5>\n            <ul className=\"pf-sect--dot-list\">\n              <li>\n                Built Landers.ph website which is the online grocery platform of\n                Landers Superstore which provides same-day delivery services in\n                many cities in Philippines.\n              </li>\n              <li>My Work: fix UI bugs only.</li>\n              <li>\n                Technologies:\n                <ul>\n                  <li>\n                    Front-end: Reactjs, redux-saga, styled-components, scss,\n                    html, bootstrap,.. (Structure based on React boilerplate -\n                    Max Stoiber)\n                  </li>\n                </ul>\n                <ul>\n                  <li>Back-end: .Net</li>\n                </ul>\n              </li>\n            </ul>\n          </div>\n          <div className=\"pf-sect\">\n            <h2 className=\"pf-sect--title\">Education Background</h2>\n            <hr className=\"pf-sect--hr\" />\n            <h5 className=\"pf-sect--sub-title\">\n              University of Technology and Education, Ho Chi Minh\n            </h5>\n            <div>\n              Bachelor of Science in Electrical and Telecommunication\n              Engineering\n            </div>\n            <br />\n            <h5 className=\"pf-sect--sub-title\">University of Dayton, Ohio</h5>\n            <div>Master of Science in Electrical and Computer Engineering</div>\n          </div>\n          <div className=\"pf-sect\">\n            <h2 className=\"pf-sect--title\">Work Experience</h2>\n            <hr className=\"pf-sect--hr\" />\n            <div className=\"work-exp--container\">\n              <div className=\"work-exp--right\">\n                <div className=\"work-exp--content\">\n                  <div className=\"work-exp--top\">\n                    <div className=\"work-exp--tree\">\n                      <span>6/2015 - 9/2015 </span>\n                    </div>\n                    <div>\n                      <h5 className=\"work-exp-title pf-sect--sub-title\">\n                        Internship\n                      </h5>\n                      <h6>\n                        Phú Mỹ Thermal Power Plant, EVN (Vietnam Electricity\n                        Company)\n                      </h6>\n                    </div>\n                  </div>\n                  <ul className=\"work-exp--detail\">\n                    <li>\n                      Completed studying general operation of the Thermal Power\n                      Plant Phú Mỹ 1.\n                    </li>\n                    <li>\n                      Did the research on PLC automatic system at initialization\n                      stage of the steam turbine, then simulated it on simulator\n                      software to test with OMROM PLC.\n                    </li>\n                  </ul>\n                </div>\n\n                <div className=\"work-exp--content\">\n                  <div className=\"work-exp--top\">\n                    <div className=\"work-exp--tree\">\n                      <span>4/2017 - 12/2017</span>\n                    </div>\n                    <div>\n                      <h5 className=\"work-exp-title pf-sect--sub-title\">\n                        Research Assistant\n                      </h5>\n                      <h6>\n                        Computer Vision Research Lab, University of Dayton\n                      </h6>\n                    </div>\n                  </div>\n                  <ul className=\"work-exp--detail\">\n                    <li>\n                      Research the vehicle classification system based on\n                      supervised learning model (suport vector machine) and\n                      artifical neural network (multilayer perceptron).\n                    </li>\n                    <li>Give presentation monthly about my own research.</li>\n                    <li>\n                      Join to work on improving real-world project provided by\n                      sponsor companies.{\" \"}\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"work-exp--content\">\n                  <div className=\"work-exp--top\">\n                    <div className=\"work-exp--tree\">\n                      <span>4/2018 - 5/2019</span>\n                    </div>\n                    <div>\n                      <h5 className=\"work-exp-title pf-sect--sub-title\">\n                        Electrical Technician\n                      </h5>\n                      <h6>Electrical Department, Pure Beauty Farms INC</h6>\n                    </div>\n                  </div>\n                  <ul className=\"work-exp--detail\">\n                    <li>Monitor manufacturing system.</li>\n                    <li>\n                      Do replacing damaged parts of production systems, wiring ,\n                      maintaining the electrical devices.\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"work-exp--content\">\n                  <div className=\"work-exp--top\">\n                    <div className=\"work-exp--tree\">\n                      <span>10/2019 - 4/2020</span>\n                    </div>\n                    <div>\n                      <h5 className=\"work-exp-title pf-sect--sub-title\">\n                        Internship\n                      </h5>\n                      <h6>Nordic Coder</h6>\n                    </div>\n                  </div>\n                  <ul className=\"work-exp--detail\">\n                    <li> Refactor Some Reactjs Projects, fix bugs.</li>\n                    <li>\n                      Build an app to collect students info for sale department.\n                    </li>\n                    <li>Build Career Portal Website.</li>\n                  </ul>\n                </div>\n                <div className=\"work-exp--content\">\n                  <div className=\"work-exp--top\">\n                    <div className=\"work-exp--tree\">\n                      <span>11/2019 - 4/2020</span>\n                    </div>\n                    <div>\n                      <h5 className=\"work-exp-title pf-sect--sub-title\">\n                        Freelance\n                      </h5>\n                      <h6>Goobits</h6>\n                    </div>\n                  </div>\n                  <ul className=\"work-exp--detail\">\n                    <li> Landers project (completed).</li>\n                    <li> Engage project (next phase: dynamic form).</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MyProfile;\n","export const SAVE_CHART = \"hs/Home/SAVE_CHART\";\nexport const SAVE_CHART_SUCCESS = \"hs/Home/SAVE_CHART_SUCCESS\";\nexport const SAVE_CHART_FAILED = \"hs/Home/SAVE_CHART_FAILED\";\n","// reducers\nimport * as constants from \"./constants\";\n\nconst initState = {\n  chartData: {\n    data: null,\n    isLoading: false,\n  },\n};\n\n//! notice that reducer is only a function that return new state object\nconst HomeReducer = (state = initState, action) => {\n  return produce(state, (newState) => {\n    switch (action.type) {\n      case constants.SAVE_CHART:\n        console.log(\"vao day ...\");\n        break;\n      case constants.SAVE_CHART_SUCCESS:\n        // newState.accessToken = action.payload;\n        break;\n      default:\n        break;\n    }\n  });\n};\n\nconst produce = (state, setState) => {\n  const newState = { ...state };\n  setState(newState);\n  return {\n    ...state,\n    ...newState,\n  };\n};\n\nexport default HomeReducer;\n","import { takeLatest, put } from \"redux-saga/effects\";\nimport * as constants from \"./constants\";\nimport * as actions from \"./actions\";\n\n// sagas\nfunction* onSaveChart(action) {\n  try {\n    yield put(actions.saveChartSuccess(action.payload));\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport default function* saga() {\n  yield takeLatest(constants.SAVE_CHART, onSaveChart);\n}\n","import * as constants from \"./constants\";\n\nexport function saveChart(requestData) {\n  return {\n    type: constants.SAVE_CHART,\n    requestData,\n  };\n}\n\nexport function saveChartSuccess(payload) {\n  return {\n    type: constants.SAVE_CHART_SUCCESS,\n    payload,\n  };\n}\n\nexport function saveChartFailed() {\n  return {\n    type: constants.SAVE_CHART_FAILED,\n  };\n}\n","import { FaChartPie, FaChartLine } from \"react-icons/fa\";\nexport const DEFINE_NAV_ITEMS = {\n  SAMPLE_1: \"SAMPLE_1\",\n  SAMPLE_2: \"SAMPLE_2\",\n};\n\nexport const DEFINE_NAV_CHART_TYPE = {\n  DOUGHNUT_CHART: {\n    ENUM: \"DOUGHNUT_CHART\",\n    name: \"Doughnut Chart\",\n    icon: FaChartPie,\n  },\n  SPLINE_CHART: {\n    ENUM: \"SPLINE_CHART\",\n    name: \"Spline Chart\",\n    icon: FaChartLine,\n  },\n};\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport * as _ from \"lodash\";\nconst theme = require('sass-extract-loader?{\"plugins\": [\"sass-extract-js\"]}!themes/scss/_variable.scss');\n\nexport default theme;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\nimport theme from \"utils/themes\";\nimport { FaChartLine } from \"react-icons/fa\";\nimport { DEFINE_NAV_ITEMS } from \"containers/Home/screens/ChartMaker/constants\";\n\nconst Wrapper = styled.div`\n  border: solid 3px lightgray;\n  border-width: 0 0 3px 0;\n  display: flex;\n  align-items: center;\n  padding: 0px 12px;\n`;\n\nconst HeaderTitle = styled.div`\n  font-weight: 600;\n  color: ${theme.nnqduyGreenElegant};\n  margin-right: 50px;\n  span :first-child {\n    margin-right: 5px;\n  }\n`;\n\nconst NavWrapper = styled.div`\n  .nav {\n    height: inherit;\n    .nav-item {\n      border: solid 3px;\n      border-color: transparent;\n      .nav-link {\n        color: black;\n      }\n    }\n  }\n  .nav-item.active {\n    border: solid 3px;\n    border-color: transparent transparent ${theme.nnqduyGreenElegant}\n      transparent;\n    .nav-link {\n      color: ${theme.nnqduyGreenElegant} !important;\n    }\n  }\n  height: 100%;\n`;\n\nfunction Header(props) {\n  const { handleNavSample, currentNavItem } = props;\n  return (\n    <Wrapper>\n      <HeaderTitle>\n        <span>\n          <FaChartLine />\n        </span>\n        <span>Chart maker</span>\n      </HeaderTitle>\n      <NavWrapper>\n        <Nav>\n          <NavItem\n            active={currentNavItem === DEFINE_NAV_ITEMS.SAMPLE_1}\n            onClick={() => handleNavSample(DEFINE_NAV_ITEMS.SAMPLE_1)}\n          >\n            <NavLink href=\"#\"> Sample 1 </NavLink>\n          </NavItem>\n          <NavItem\n            active={currentNavItem === DEFINE_NAV_ITEMS.SAMPLE_2}\n            onClick={() => handleNavSample(DEFINE_NAV_ITEMS.SAMPLE_2)}\n          >\n            <NavLink href=\"#\">Sample 2</NavLink>\n          </NavItem>\n        </Nav>\n      </NavWrapper>\n    </Wrapper>\n  );\n}\n\nHeader.propTypes = {\n  handleNavSample: PropTypes.func.isRequired,\n  currentNavItem: PropTypes.any,\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport theme from \"utils/themes\";\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 35px;\n    height: 35px;\n  }\n`;\n\nconst MenuItemText = styled.div`\n  margin-left: 20px;\n`;\n\nconst Wrapper = styled.div`\n  color: #818181;\n  padding: 30px 10px;\n  cursor: pointer;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: flex-start;\n  :hover,\n  :focus {\n    color: ${theme.nnqduyGreenElegant};\n    background-color: rgba(107, 109, 110, 0.6);\n  }\n  ${({ active }) => {\n    if (active) {\n      return `\n          color: ${theme.nnqduyGreenElegant};\n          background-color: rgba(107, 109, 110, 0.6);\n          `;\n    }\n  }}\n`;\n\nfunction MenuBarItem(props) {\n  const { itemDefine, currentChart, changeGraphType } = props;\n  return (\n    <Wrapper\n      active={currentChart === itemDefine.ENUM}\n      onClick={() => changeGraphType(itemDefine.ENUM)}\n    >\n      <IconWrapper>\n        <itemDefine.icon />\n      </IconWrapper>\n      <MenuItemText>{itemDefine.name}</MenuItemText>\n    </Wrapper>\n  );\n}\n\nMenuBarItem.propTypes = {\n  itemDefine: PropTypes.any,\n  currentChart: PropTypes.string,\n  changeGraphType: PropTypes.func,\n};\n\nexport default MenuBarItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as _ from \"lodash\";\nimport styled from \"styled-components\";\nimport { DEFINE_NAV_CHART_TYPE } from \"containers/Home/screens/ChartMaker/constants\";\nimport theme from \"utils/themes\";\nimport { FaArrowRight } from \"react-icons/fa\";\n\nimport MenuBarItem from \"../menubarItem\";\n\nconst Wrapper = styled.div`\n  background: ${theme.nnqduyDarkSoul};\n  border-radius: 3px 10px 10px 3px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px 0;\n  transition: all 0.5s;\n  width: 60px;\n  overflow-x: hidden;\n  white-space: nowrap;\n  ${({ menuOnHover }) => {\n    if (menuOnHover) {\n      return `width: 200px;`;\n    }\n  }}\n`;\n\nconst ArrowExpandButton = styled.div`\n  padding: 30px 0;\n  svg {\n    width: 27px;\n    height: 27px;\n  }\n  transition: all 0.5s;\n  color: ${theme.nnqduyGreenElegant};\n  ${({ menuOnHover }) => {\n    if (menuOnHover) {\n      return ` transform: rotate(180deg);`;\n    }\n  }}\n`;\n\nfunction MenuBar(props) {\n  const { menuOnHover, currentChart, changeGraphType } = props;\n  const chartsMapper = _.values(DEFINE_NAV_CHART_TYPE);\n  return (\n    <Wrapper menuOnHover={menuOnHover}>\n      <ArrowExpandButton menuOnHover={menuOnHover}>\n        <FaArrowRight />\n      </ArrowExpandButton>\n      {chartsMapper.map((chartItem) => (\n        <MenuBarItem\n          key={`Menu-item-${chartItem.name}`}\n          itemDefine={chartItem}\n          currentChart={currentChart}\n          changeGraphType={changeGraphType}\n        />\n      ))}\n    </Wrapper>\n  );\n}\n\nMenuBar.propTypes = {\n  menuOnHover: PropTypes.bool,\n  currentChart: PropTypes.string,\n  changeGraphType: PropTypes.func,\n};\n\nexport default React.memo(MenuBar);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport * as _ from \"lodash\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Wrapper = styled.div``;\nconst GraphTitle = styled.div``;\n\nlet data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"Default Label\",\n      data: [65, 59, 80, 81, 56, 55, 40],\n      lineTension: 0.4,\n      backgroundColor: \"rgba(75,192,192,0.2)\",\n      borderColor: \"rgba(75,192,192,1)\",\n      fill: true,\n      borderCapStyle: \"butt\",\n      borderDash: [5, 5],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: \"rgba(75,192,192,1)\",\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 4,\n      pointHitRadius: 10,\n    },\n  ],\n};\n\nlet options = {\n  legend: {\n    display: true,\n  },\n};\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: false,\n    };\n  }\n  render() {\n    const { dataSets, labels, optionConfigs, title } = this.props;\n    if (!_.isEmpty(optionConfigs)) options = { ...options, ...optionConfigs };\n    if (!_.isEmpty(labels)) data = { ...data, labels: labels };\n    if (!_.isEmpty(dataSets))\n      data = {\n        ...data,\n        datasets: [\n          {\n            ...data.datasets[0],\n            ...dataSets,\n          },\n        ],\n      };\n\n    return (\n      <Wrapper>\n        {title && <GraphTitle>{title}</GraphTitle>}\n        <Line data={data} options={options} />\n      </Wrapper>\n    );\n  }\n}\nLineChart.propTypes = {\n  dataConfig: PropTypes.object,\n  optionConfigs: PropTypes.object,\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import styled from \"styled-components\";\nimport * as _ from \"lodash\";\nimport SplineChart from \"components/Charts/SplineChart\";\n\nfunction LineChart(props) {\n  const { title, form } = props;\n  const preData = {\n    dataSets: {\n      data: _.get(form, \"data\").map((value) => (value === \"\" ? \"0\" : value)),\n    },\n    labels: _.get(form, \"labels\"),\n  };\n  return (\n    <>\n      <SplineChart\n        title={title}\n        dataSets={preData.dataSets}\n        labels={preData.labels}\n      />\n    </>\n  );\n}\n\nLineChart.propTypes = {\n  title: PropTypes.string,\n  form: PropTypes.any,\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport * as _ from \"lodash\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nconst Wrapper = styled.div``;\nconst GraphTitle = styled.div``;\n\nlet data = {\n  labels: [\"Red\", \"Green\", \"Yellow\"],\n  datasets: [\n    {\n      data: [300, 50, 100],\n      backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n      hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n    },\n  ],\n};\n\nlet options = {\n  legend: {\n    display: true,\n  },\n};\n\nclass DoughnutChart extends React.Component {\n  render() {\n    const { dataSets, labels, optionConfigs, title } = this.props;\n    if (!_.isEmpty(optionConfigs)) options = { ...options, ...optionConfigs };\n    if (!_.isEmpty(labels)) data = { ...data, labels: labels };\n    if (!_.isEmpty(dataSets))\n      data = {\n        ...data,\n        datasets: [\n          {\n            ...data.datasets[0],\n            ...dataSets,\n          },\n        ],\n      };\n\n    return (\n      <Wrapper>\n        {title && <GraphTitle>{title}</GraphTitle>}\n        <Doughnut data={data} options={options} />\n      </Wrapper>\n    );\n  }\n}\n\nexport default DoughnutChart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import styled from \"styled-components\";\nimport * as _ from \"lodash\";\nimport DoughnutChart from \"components/Charts/DoughnutChart\";\n\nfunction Doughnut(props) {\n  const { title, form } = props;\n  const preData = {\n    dataSets: {\n      data: _.get(form, \"data\", []).map((value) =>\n        value === \"\" ? \"0\" : value\n      ),\n    },\n    labels: _.get(form, \"labels\"),\n  };\n  return (\n    <>\n      <DoughnutChart\n        title={title}\n        dataSets={preData.dataSets}\n        labels={preData.labels}\n      />\n    </>\n  );\n}\n\nDoughnut.propTypes = {\n  title: PropTypes.string,\n  form: PropTypes.any,\n};\n\nexport default Doughnut;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport * as _ from \"lodash\";\nimport { DEFINE_NAV_CHART_TYPE } from \"containers/Home/screens/ChartMaker/constants\";\nimport LineChart from \"containers/Home/components/ChartMaker/LineChart\";\nimport DoughnutChart from \"containers/Home/components/ChartMaker/DoughnutChart\";\n\nconst Wrapper = styled.div``;\n\nfunction Chart(props) {\n  const { currentChart, form } = props;\n  const data = {\n    title: _.get(form, \"title\"),\n  };\n  return (\n    <Wrapper>\n      {currentChart === DEFINE_NAV_CHART_TYPE.SPLINE_CHART.ENUM && (\n        <LineChart title={data.title} form={form} />\n      )}\n      {currentChart === DEFINE_NAV_CHART_TYPE.DOUGHNUT_CHART.ENUM && (\n        <DoughnutChart title={data.title} form={form} />\n      )}\n    </Wrapper>\n  );\n}\n\nChart.propTypes = {\n  currentChart: PropTypes.string,\n  form: PropTypes.any,\n};\n\nexport default Chart;\n","import React from \"react\";\nimport styled from \"styled-components\";\n// import PropTypes from \"prop-types\";\nimport { Input } from \"reactstrap\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nfunction TableInput(props) {\n  const { myProps, ...restProps } = props;\n  return (\n    <Wrapper>\n      <Input {...restProps} />\n    </Wrapper>\n  );\n}\n\nexport default TableInput;\n","// ! Notic: i will not use formik to handle this form.\n// ! sHowever, i recommend you guy use formik as it is the best =))\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Table, Button } from \"reactstrap\";\nimport * as _ from \"lodash\";\nimport TableInput from \"components/Form/TableInput\";\n\nconst Wrapper = styled.div`\n  th {\n    max-width: 80px !important;\n  }\n`;\n\nconst BtnWrapper = styled.div``;\n\nfunction LineChartForm(props) {\n  const { form, setField, setValues } = props;\n  const data = {\n    labels: _.get(form, \"labels\"),\n    values: _.get(form, \"data\"),\n  };\n  const procData = data.labels.map((label, ind) => ({\n    label: label,\n    value: _.get(data.values, `${ind}`),\n  }));\n\n  const addRow = () => {\n    const procLabels = [...data.labels];\n    const procValues = [...data.values];\n    setValues({\n      data: [...procValues, \"\"],\n      labels: [...procLabels, \"\"],\n    });\n  };\n\n  const deleteRow = (idx) => {\n    const procLabels = [...data.labels].filter((item, index) => index !== idx);\n    const procValues = [...data.values].filter((item, index) => index !== idx);\n    setValues({\n      data: procValues,\n      labels: procLabels,\n    });\n  };\n\n  return (\n    <Wrapper>\n      <Table>\n        <thead>\n          <tr>\n            <th>Item Name</th>\n            <th>Value</th>\n            <th>* Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {procData.map((item, idx) => (\n            <NewRow\n              key={`table-row--${idx}`}\n              idx={idx}\n              itemData={item}\n              data={data}\n              setField={setField}\n              deleteRow={deleteRow}\n            />\n          ))}\n        </tbody>\n      </Table>\n      <BtnWrapper>\n        <Button className=\"nnqduy-btn--primary\" onClick={() => addRow()}>\n          + Add\n        </Button>\n      </BtnWrapper>\n    </Wrapper>\n  );\n}\n\nfunction NewRow(props) {\n  const { itemData, data, setField, deleteRow, idx } = props;\n  const handleChangeItemName = (event) => {\n    let procValue = [...data.labels];\n    procValue[idx] = event.target.value;\n    setField(\"labels\", procValue);\n  };\n\n  const handleChangeItemValue = (event) => {\n    let procValue = [...data.values];\n    if (!isNaN(Number(event.target.value))) {\n      procValue[idx] = event.target.value;\n      setField(\"data\", procValue);\n    }\n  };\n\n  return (\n    <tr>\n      <th scope=\"row\">\n        <TableInput\n          onChange={handleChangeItemName}\n          value={_.get(itemData, \"label\")}\n          placeholder=\"Add Item Name\"\n        />\n      </th>\n      <td>\n        <TableInput\n          onChange={handleChangeItemValue}\n          value={_.get(itemData, \"value\")}\n          placeholder=\"Add Value\"\n        />\n      </td>\n      <td>\n        <BtnWrapper>\n          <Button\n            className=\"nnqduy-btn--warning\"\n            onClick={() => deleteRow(idx)}\n          >\n            Delete\n          </Button>\n        </BtnWrapper>\n      </td>\n    </tr>\n  );\n}\n\nLineChartForm.propTypes = {\n  form: PropTypes.any,\n  setField: PropTypes.func,\n  setValues: PropTypes.func,\n};\n\nNewRow.propTypes = {\n  itemData: PropTypes.any,\n  data: PropTypes.any,\n  setField: PropTypes.func,\n  deleteRow: PropTypes.func,\n  idx: PropTypes.any,\n};\n\nexport default React.memo(LineChartForm);\n","// ! Notic: i will not use formik to handle this form.\n// ! sHowever, i recommend you guy use formik as it is the best =))\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Table, Button } from \"reactstrap\";\nimport * as _ from \"lodash\";\nimport TableInput from \"components/Form/TableInput\";\n\nconst Wrapper = styled.div`\n  th {\n    max-width: 80px !important;\n  }\n`;\n\nconst BtnWrapper = styled.div``;\n\nfunction DoughnutChartForm(props) {\n  const { form, setField, setValues } = props;\n  const data = {\n    labels: _.get(form, \"labels\"),\n    values: _.get(form, \"data\"),\n  };\n  const procData = data.labels.map((label, ind) => ({\n    label: label,\n    value: _.get(data.values, `${ind}`),\n  }));\n\n  const addRow = () => {\n    const procLabels = [...data.labels];\n    const procValues = [...data.values];\n    setValues({\n      data: [...procValues, \"\"],\n      labels: [...procLabels, \"\"],\n    });\n  };\n\n  const deleteRow = (idx) => {\n    const procLabels = [...data.labels].filter((item, index) => index !== idx);\n    const procValues = [...data.values].filter((item, index) => index !== idx);\n    setValues({\n      data: procValues,\n      labels: procLabels,\n    });\n  };\n\n  return (\n    <Wrapper>\n      <Table>\n        <thead>\n          <tr>\n            <th>Item Name</th>\n            <th>Value</th>\n            <th>* Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {procData.map((item, idx) => (\n            <NewRow\n              key={`table-row--${idx}`}\n              idx={idx}\n              itemData={item}\n              data={data}\n              setField={setField}\n              deleteRow={deleteRow}\n            />\n          ))}\n        </tbody>\n      </Table>\n      <BtnWrapper>\n        <Button className=\"nnqduy-btn--primary\" onClick={() => addRow()}>\n          + Add\n        </Button>\n      </BtnWrapper>\n    </Wrapper>\n  );\n}\n\nfunction NewRow(props) {\n  const { itemData, data, setField, deleteRow, idx } = props;\n  const handleChangeItemName = (event) => {\n    let procValue = [...data.labels];\n    procValue[idx] = event.target.value;\n    setField(\"labels\", procValue);\n  };\n\n  const handleChangeItemValue = (event) => {\n    let procValue = [...data.values];\n    if (!isNaN(Number(event.target.value))) {\n      procValue[idx] = event.target.value;\n      setField(\"data\", procValue);\n    }\n  };\n\n  return (\n    <tr>\n      <th scope=\"row\">\n        <TableInput\n          onChange={handleChangeItemName}\n          value={_.get(itemData, \"label\")}\n          placeholder=\"Add Item Name\"\n        />\n      </th>\n      <td>\n        <TableInput\n          onChange={handleChangeItemValue}\n          value={_.get(itemData, \"value\")}\n          placeholder=\"Add Value\"\n        />\n      </td>\n      <td>\n        <BtnWrapper>\n          <Button\n            className=\"nnqduy-btn--warning\"\n            onClick={() => deleteRow(idx)}\n          >\n            Delete\n          </Button>\n        </BtnWrapper>\n      </td>\n    </tr>\n  );\n}\n\nDoughnutChartForm.propTypes = {\n  form: PropTypes.any,\n  setField: PropTypes.func,\n  setValues: PropTypes.func,\n};\n\nNewRow.propTypes = {\n  itemData: PropTypes.any,\n  data: PropTypes.any,\n  setField: PropTypes.func,\n  deleteRow: PropTypes.func,\n  idx: PropTypes.any,\n};\n\nexport default React.memo(DoughnutChartForm);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport * as _ from \"lodash\";\nimport { DEFINE_NAV_CHART_TYPE } from \"containers/Home/screens/ChartMaker/constants\";\nimport LineChartForm from \"containers/Home/components/ChartMaker/LineChartForm\";\nimport DoughnutChartForm from \"containers/Home/components/ChartMaker/DoughnutChartForm\";\n\nconst Wrapper = styled.div``;\n\nfunction ChartForm(props) {\n  const { currentChart, form, setField, setValues } = props;\n\n  return (\n    <Wrapper>\n      {currentChart === DEFINE_NAV_CHART_TYPE.SPLINE_CHART.ENUM && (\n        <LineChartForm form={form} setField={setField} setValues={setValues} />\n      )}\n      {currentChart === DEFINE_NAV_CHART_TYPE.DOUGHNUT_CHART.ENUM && (\n        <DoughnutChartForm\n          form={form}\n          setField={setField}\n          setValues={setValues}\n        />\n      )}\n    </Wrapper>\n  );\n}\n\nChartForm.propTypes = {\n  currentChart: PropTypes.string,\n  form: PropTypes.any,\n  setField: PropTypes.func,\n  setValues: PropTypes.func,\n};\n\nexport default ChartForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Row, Col } from \"reactstrap\";\nimport * as _ from \"lodash\";\nimport { DEFINE_NAV_ITEMS, DEFINE_NAV_CHART_TYPE } from \"./constants.js\";\n\nimport ChartMakerHeader from \"containers/Home/components/ChartMaker/Header\";\nimport MenuBar from \"containers/Home/components/ChartMaker/Menubar\";\nimport Chart from \"containers/Home/components/ChartMaker/Chart\";\nimport ChartForm from \"containers/Home/components/ChartMaker/ChartForm\";\n\nconst Rowx = styled(Row)`\n  margin: 0px;\n`;\nconst Colx = styled(Col)`\n  padding: 0;\n`;\nconst Wrapper = styled.div``;\n\nconst HeaderWrapper = styled.div`\n  width: 100%;\n  height: 50px;\n  position: fixed;\n  top: 0;\n  z-index: 1000;\n  background: white;\n`;\n\nconst MainWrapper = styled.div`\n  margin-top: 50px;\n  height: calc(100vh - 50px);\n`;\nconst MenuBarWrapper = styled.div`\n  position: fixed;\n  top: 30%;\n  left: 5px;\n  z-index: 100;\n`;\n\nconst ChartWrapper = styled.div`\n  width: 500px;\n`;\n\nconst FormWrapper = styled.div`\n  padding: 30px;\n`;\n\nclass ChartMaker extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navItem: DEFINE_NAV_ITEMS.SAMPLE_1,\n      currentChart: DEFINE_NAV_CHART_TYPE.SPLINE_CHART.ENUM,\n      menuOnHover: false,\n      form: {\n        title: \"No Name\",\n        data: [\"10\", \"20\", \"5\"],\n        labels: [\"January\", \"Febuary\", \"March\"],\n      },\n    };\n  }\n\n  setField = (path, value) => {\n    const copyForm = { ...this.state.form };\n    _.set(copyForm, path, value);\n    this.setState({ form: copyForm });\n  };\n\n  setValues = (newValues) => {\n    const { form } = this.state;\n    this.setState({ form: { ...form, ...newValues } });\n  };\n\n  handleNavSample = (newNavItem) => {\n    this.setState({ navItem: newNavItem });\n  };\n\n  handleHoverMenuBar = (status) => {\n    this.setState({ menuOnHover: status });\n  };\n\n  changeGraphType = (graphType) => {\n    this.setState({ currentChart: graphType });\n  };\n\n  render() {\n    const { navItem, menuOnHover, currentChart, form } = this.state;\n    return (\n      <Wrapper>\n        <HeaderWrapper>\n          <ChartMakerHeader\n            currentNavItem={navItem}\n            handleNavSample={this.handleNavSample}\n          />\n        </HeaderWrapper>\n        <MainWrapper>\n          <Rowx className=\"h-100\">\n            <Colx xs={12}>\n              <Rowx className=\"h-100\">\n                <Colx xs={1}>\n                  <MenuBarWrapper\n                    onMouseEnter={() => this.handleHoverMenuBar(true)}\n                    onMouseLeave={() => this.handleHoverMenuBar(false)}\n                  >\n                    <MenuBar\n                      menuOnHover={menuOnHover}\n                      currentChart={currentChart}\n                      changeGraphType={this.changeGraphType}\n                    />\n                  </MenuBarWrapper>\n                </Colx>\n                <Colx xs={11}>\n                  <Rowx>\n                    <Colx xs={12}>\n                      <ChartWrapper>\n                        <Chart currentChart={currentChart} form={form} />\n                      </ChartWrapper>\n                    </Colx>\n                  </Rowx>\n                  <Rowx>\n                    <Colx xs={12}>\n                      <FormWrapper>\n                        <ChartForm\n                          currentChart={currentChart}\n                          form={form}\n                          setField={this.setField}\n                          setValues={this.setValues}\n                        />\n                      </FormWrapper>\n                    </Colx>\n                  </Rowx>\n                </Colx>\n              </Rowx>\n            </Colx>\n          </Rowx>\n        </MainWrapper>\n      </Wrapper>\n    );\n  }\n}\n\nexport default ChartMaker;\n","import { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport ChartMaker from \".\";\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatch,\n  };\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(ChartMaker);\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport \"themes/css/App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport ChartMaker from \"containers/Home/screens/ChartMaker/Injectable\";\n\nfunction Home() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/home/chartMaker\" component={ChartMaker} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </>\n  );\n}\n\nexport default Home;\n","import { compose } from \"redux\";\n// import { connect } from \"react-redux\";\nimport injectReducer from \"utils/injectReducer\";\nimport injectSaga from \"utils/injectSaga\";\nimport reducer from \"./reducer\";\n\nimport saga from \"./saga\";\nimport Home from \".\";\n\n// const mapStateToProps = (state) => {\n//   const globalDomain = state.global;\n//   return {\n//     accessToken: globalDomain.accessToken,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     dispatch,\n//   };\n// };\n\nconst withReducer = injectReducer({ key: \"home\", reducer });\nconst withSaga = injectSaga({ key: \"home\", saga });\n\n// const withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withSaga, withReducer)(Home);\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport \"themes/css/App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport TestSeedScreen from \"containers/App/screens/TestSeedScreen/Injectable\";\nimport MyProfile from \"containers/App/screens/MyProfile\";\nimport Home from \"containers/Home/Injectable\";\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={TestSeedScreen} />\n        <Route exact path=\"/author/profile\" component={MyProfile} />\n        <Route path=\"/home\" component={Home} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport injectReducer from \"utils/injectReducer\";\nimport injectSaga from \"utils/injectSaga\";\nimport reducer from \"./reducer\";\n// import {\n//   // configureStore,\n//   injectReducer,\n//   injectSaga,\n// } from \"redux-inject-reducer-and-saga\";\n\nimport saga from \"./saga\";\nimport App from \".\";\n\nconst mapStateToProps = (state) => {\n  const globalDomain = state.global;\n  return {\n    accessToken: globalDomain.accessToken,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatch,\n  };\n};\n\nconst withReducer = injectReducer({ key: \"global\", reducer });\nconst withSaga = injectSaga({ key: \"global\", saga });\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect, withSaga, withReducer)(App);\n","// import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\n// ! router middleware is to interact with history\nimport { routerMiddleware } from \"connected-react-router\";\n// ! saga middleware to interact with saga\nimport createSagaMiddleware from \"redux-saga\";\nimport history from \"utils/history.js\";\n\nimport createReducer from \"./reducers.js\";\n\nfunction configureStore(initialState = {}) {\n  let enhancedCompose = compose;\n  if (process.env.NODE_ENV !== \"production\" && typeof window === \"object\") {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)\n      enhancedCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({});\n  }\n\n  const reduxSagaMonitorOptions = {};\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n\n  const store = createStore(\n    createReducer(),\n    initialState,\n    // enhancedCompose(...enhancers)\n    enhancedCompose(\n      ...[applyMiddleware(...[sagaMiddleware, routerMiddleware(history)])]\n    )\n  );\n\n  store.runSaga = sagaMiddleware.run;\n  store.injectedReducers = {}; // Reducer registry\n  store.injectedSagas = {}; // Saga registry\n\n  if (module.hot) {\n    module.hot.accept(\"./reducers\", () => {\n      store.replaceReducer(createReducer(store.injectedReducers));\n    });\n  }\n\n  return store;\n}\n\nconst store = configureStore({});\n\nexport { store };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./GlobalStyle.css\";\nimport \"./themes/scss/main.scss\";\nimport App from \"./containers/App/Injectable\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"configureStore\";\nimport history from \"utils/history.js\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <App />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// ! note ConnectedRouter only work when history props isAvail\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n//! https://openbase.io/js/connected-react-router\n","module.exports = __webpack_public_path__ + \"static/media/my-pic.47006ed7.jpg\";"],"sourceRoot":""}